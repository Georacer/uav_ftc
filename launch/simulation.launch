<!-- Launch file for the simulator core /-->

<launch>

	<arg name="manualMode"/>
	<!-- Connect model input with joystick -->
	<arg name="autoMode"/>
	<!-- Connect model input with a controller node -->
	<arg name="uav_name"/>
	<!-- uav_name parameter which selects aircraft data file -->

	<!-- External optional arguments -->
	<arg name="home"/>
	<arg name="simRate"/>
	<arg name="deltaT"/>

	<!-- Initialization of parameters -->
	<group>
		<!-- Load global parameters -->
		<rosparam command="load" ns="/world/" file="$(env HOME)/last_letter_models/world.yaml" />
	</group>

	<!-- Initialization of services -->
	<group>
	</group>

	<!-- First UAV Group -->
	<group ns="$(arg uav_name)">

		<!-- Initialization of the parameters -->
		<rosparam command="load" file="$(env HOME)/last_letter_models/aircraft/$(arg uav_name)/init.yaml" /> <!--load state initialization parameters -->
		<rosparam command="load" file="$(env HOME)/last_letter_models/aircraft/$(arg uav_name)/aerodynamics.yaml" /> <!--load state initialization parameters -->
		<rosparam command="load" file="$(env HOME)/last_letter_models/Sensors_parameters.yaml" />

		<!-- Raising core nodes -->
		<group>
			<param name="uav_name" value="$(arg uav_name)" />  <!-- Set uav_name for use by plane_model -->
			<node pkg="last_letter" name="argumentHandler" type="argumentHandler" output="screen">				<!-- Node which handles last-minute changes in the parameter server. Always last after any parameter loads -->
				<rosparam param="home" subst_value="true">$(arg home)</rosparam>
				<param name="simRate" value="$(arg simRate)"/>
				<param name="deltaT" value="$(arg deltaT)"/>
				<param name="ArduPlane" value="false"/>
			</node>
			<node pkg="last_letter" name="clock" type="simClock" output="screen"/>
			<!-- <node pkg="last_letter" name="plane_model" type="model" output="screen" required="true"/> -->
			<node pkg="last_letter" name="plane_model" type="model" output="screen" required="true" launch-prefix="gdb -ex run --args"/>
		</group>

		<!-- Transformations broadcasters -->
		<group>
			<!-- transform body NED to body NWU -->
			<node pkg="tf" type="static_transform_publisher" name="body2Cockpit" args="0.0 0.0 0.0 0.0 0.0 3.14 base_link plane_camera 10" />
		</group>

	</group>

</launch>
